<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/view/AgendaView.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/view/AgendaView.java" />
              <option name="originalContent" value="package view;&#10;&#10;import controller.AgendaController;&#10;import javafx.geometry.Insets;&#10;import javafx.geometry.Orientation;&#10;import javafx.geometry.Pos;&#10;import javafx.scene.Scene;&#10;import javafx.scene.control.*;&#10;import javafx.scene.layout.*;&#10;import javafx.stage.Stage;&#10;import javafx.scene.paint.Color;&#10;import javafx.scene.text.Font;&#10;import javafx.scene.text.FontWeight;&#10;import javafx.scene.effect.DropShadow;&#10;&#10;import java.util.List;&#10;&#10;public class AgendaView {&#10;    private final AgendaController controller;&#10;&#10;    // Definición de colores según la nueva paleta moderna&#10;    private static final String COLOR_BEIGE = &quot;#F2D0A7&quot;;       // Beige cálido&#10;    private static final String COLOR_CREMA = &quot;#F2EDE9&quot;;       // Crema claro&#10;    private static final String COLOR_MINT = &quot;#C3D7D8&quot;;        // Menta claro&#10;    private static final String COLOR_MARRON = &quot;#8C6E5D&quot;;      // Marrón medio&#10;    private static final String COLOR_ROSA = &quot;#F2CFC2&quot;;        // Rosa pastel&#10;    private static final String COLOR_TEXTO = &quot;#3A3A3A&quot;;       // Texto casi negro&#10;&#10;    public AgendaView(AgendaController controller) {&#10;        this.controller = controller;&#10;    }&#10;&#10;    public void mostrar(Stage primaryStage) {&#10;        primaryStage.setTitle(&quot;Agenda de Contactos&quot;);&#10;&#10;        // Título principal con estilo moderno&#10;        Label lblTitulo = new Label(&quot;AGENDA DE CONTACTOS&quot;);&#10;        lblTitulo.setFont(Font.font(&quot;Montserrat&quot;, FontWeight.BOLD, 22));&#10;        lblTitulo.setTextFill(Color.web(COLOR_MARRON));&#10;        lblTitulo.setPadding(new Insets(15, 0, 15, 0));&#10;        lblTitulo.setAlignment(Pos.CENTER);&#10;        lblTitulo.setMaxWidth(Double.MAX_VALUE);&#10;        lblTitulo.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                          &quot;-fx-background-radius: 8;&quot; +&#10;                          &quot;-fx-border-radius: 8;&quot;);&#10;&#10;        // Campos de entrada con estilo moderno&#10;        Label lblDatosContacto = new Label(&quot;INFORMACIÓN DE CONTACTO&quot;);&#10;        lblDatosContacto.setFont(Font.font(&quot;Montserrat&quot;, FontWeight.BOLD, 14));&#10;        lblDatosContacto.setTextFill(Color.web(COLOR_MARRON));&#10;        lblDatosContacto.setPadding(new Insets(10, 0, 10, 0));&#10;        lblDatosContacto.setAlignment(Pos.CENTER);&#10;        lblDatosContacto.setMaxWidth(Double.MAX_VALUE);&#10;&#10;        TextField txtNombre = crearCampoTexto(&quot;Nombre&quot;);&#10;        TextField txtApellido = crearCampoTexto(&quot;Apellido&quot;);&#10;        TextField txtTelefono = crearCampoTexto(&quot;Teléfono (9 dígitos)&quot;);&#10;        TextField txtEmail = crearCampoTexto(&quot;Correo electrónico&quot;);&#10;&#10;        // Lista de contactos con estilo moderno&#10;        ListView&lt;String&gt; listaContactos = new ListView&lt;&gt;();&#10;        listaContactos.setStyle(&quot;-fx-control-inner-background: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                               &quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                               &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                               &quot;-fx-border-color: transparent;&quot; +&#10;                               &quot;-fx-background-radius: 10px;&quot; +&#10;                               &quot;-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 10, 0, 0, 5);&quot;);&#10;&#10;        // Botones con estilos modernos - ahora verticales&#10;        Button btnAgregar = crearBoton(&quot;Añadir Contacto&quot;, COLOR_MINT);&#10;        Button btnListar = crearBoton(&quot;Listar Contactos&quot;, COLOR_MINT);&#10;        Button btnEliminar = crearBoton(&quot;Eliminar Contacto&quot;, COLOR_MARRON);&#10;        Button btnModificar = crearBoton(&quot;Modificar Teléfono&quot;, COLOR_MINT);&#10;        Button btnEspacios = crearBoton(&quot;Espacios Libres&quot;, COLOR_ROSA);&#10;        Button btnLlena = crearBoton(&quot;¿Agenda Llena?&quot;, COLOR_ROSA);&#10;&#10;        // Acciones (sin cambios)&#10;        btnAgregar.setOnAction(e -&gt; {&#10;            try {&#10;                String mensaje = controller.agregarContacto(&#10;                        txtNombre.getText(),&#10;                        txtApellido.getText(),&#10;                        txtTelefono.getText(),&#10;                        txtEmail.getText()&#10;                );&#10;                mostrarAlerta(&quot;Resultado&quot;, mensaje);&#10;            } catch (Exception ex) {&#10;                mostrarAlerta(&quot;Error&quot;, ex.getMessage());&#10;            }&#10;        });&#10;&#10;        btnListar.setOnAction(e -&gt; {&#10;            listaContactos.getItems().setAll(controller.listarContactos());&#10;        });&#10;&#10;        btnEliminar.setOnAction(e -&gt; {&#10;            String mensaje = controller.eliminarContacto(txtNombre.getText(), txtApellido.getText());&#10;            mostrarAlerta(&quot;Resultado&quot;, mensaje);&#10;&#10;            String mensaje = controller.modificarTelefono(&#10;                    txtNombre.getText(),&#10;                    txtApellido.getText(),&#10;                    txtTelefono.getText()&#10;            );&#10;            mostrarAlerta(&quot;Resultado&quot;, mensaje);&#10;            // Mostrar diálogo de modificación&#10;            mostrarDialogoModificarTelefono(nombre, apellido, telefonoActual);&#10;        });&#10;&#10;        btnEspacios.setOnAction(e -&gt; {&#10;            mostrarAlerta(&quot;Espacios libres&quot;, &quot;Quedan &quot; + controller.espaciosLibres() + &quot; espacios.&quot;);&#10;        });&#10;&#10;        btnLlena.setOnAction(e -&gt; {&#10;            boolean llena = controller.agendaLlena();&#10;            mostrarAlerta(&quot;Estado de Agenda&quot;, llena ? &quot;La agenda está llena&quot; : &quot;Aún hay espacio disponible&quot;);&#10;        });&#10;&#10;        // Layout mejorado con diseño moderno&#10;        VBox seccionFormulario = new VBox(10);&#10;        seccionFormulario.getChildren().addAll(lblDatosContacto, txtNombre, txtApellido, txtTelefono, txtEmail);&#10;        seccionFormulario.setStyle(&quot;-fx-background-color: &quot; + COLOR_BEIGE + &quot;;&quot; +&#10;                                  &quot;-fx-background-radius: 12;&quot; +&#10;                                  &quot;-fx-padding: 20;&quot; +&#10;                                  &quot;-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 10, 0, 0, 5);&quot;);&#10;&#10;        // Botones en disposición vertical&#10;        VBox seccionBotones = new VBox(10);&#10;        seccionBotones.getChildren().addAll(&#10;                new Label(&quot;ACCIONES&quot;),&#10;                btnAgregar,&#10;                btnListar,&#10;                btnModificar,&#10;                new Separator(),&#10;                btnEliminar,&#10;                new Separator(),&#10;                btnEspacios,&#10;                btnLlena);&#10;        seccionBotones.setStyle(&quot;-fx-padding: 15;&quot; +&#10;                               &quot;-fx-background-color: &quot; + COLOR_BEIGE + &quot;;&quot; +&#10;                               &quot;-fx-background-radius: 12;&quot; +&#10;                               &quot;-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 10, 0, 0, 5);&quot;);&#10;&#10;        // Agregamos estilo al título de la sección de botones&#10;        ((Label)seccionBotones.getChildren().get(0)).setFont(Font.font(&quot;Montserrat&quot;, FontWeight.BOLD, 14));&#10;        ((Label)seccionBotones.getChildren().get(0)).setTextFill(Color.web(COLOR_MARRON));&#10;        ((Label)seccionBotones.getChildren().get(0)).setAlignment(Pos.CENTER);&#10;        ((Label)seccionBotones.getChildren().get(0)).setMaxWidth(Double.MAX_VALUE);&#10;        ((Label)seccionBotones.getChildren().get(0)).setPadding(new Insets(0, 0, 5, 0));&#10;&#10;        VBox panelIzquierdo = new VBox(20);&#10;        panelIzquierdo.getChildren().addAll(lblTitulo, seccionFormulario, seccionBotones);&#10;        panelIzquierdo.setPadding(new Insets(25));&#10;        panelIzquierdo.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot;);&#10;        panelIzquierdo.setPrefWidth(300);&#10;        panelIzquierdo.setAlignment(Pos.TOP_CENTER);&#10;&#10;        Label lblListaContactos = new Label(&quot;CONTACTOS GUARDADOS&quot;);&#10;        lblListaContactos.setFont(Font.font(&quot;Montserrat&quot;, FontWeight.BOLD, 18));&#10;        lblListaContactos.setTextFill(Color.web(COLOR_MARRON));&#10;        lblListaContactos.setPadding(new Insets(0, 0, 15, 0));&#10;        lblListaContactos.setAlignment(Pos.CENTER);&#10;        lblListaContactos.setMaxWidth(Double.MAX_VALUE);&#10;&#10;        VBox panelDerecho = new VBox(15);&#10;        panelDerecho.getChildren().addAll(lblListaContactos, listaContactos);&#10;        panelDerecho.setPadding(new Insets(25));&#10;        panelDerecho.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot;);&#10;&#10;        // Añadir una línea decorativa entre paneles&#10;        Separator separador = new Separator();&#10;        separador.setOrientation(Orientation.VERTICAL);&#10;        separador.setStyle(&quot;-fx-background-color: &quot; + COLOR_BEIGE + &quot;;&quot;);&#10;&#10;        HBox contenedorPrincipal = new HBox();&#10;        contenedorPrincipal.getChildren().addAll(panelIzquierdo, separador, panelDerecho);&#10;        HBox.setHgrow(panelDerecho, Priority.ALWAYS);&#10;&#10;        BorderPane root = new BorderPane();&#10;        root.setCenter(contenedorPrincipal);&#10;        root.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot;);&#10;&#10;        Scene scene = new Scene(root, 850, 600);&#10;        primaryStage.setScene(scene);&#10;        primaryStage.show();&#10;    }&#10;&#10;    private TextField crearCampoTexto(String prompt) {&#10;        TextField textField = new TextField();&#10;        textField.setPromptText(prompt);&#10;        textField.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                          &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                          &quot;-fx-prompt-text-fill: derive(&quot; + COLOR_TEXTO + &quot;, 50%);&quot; +&#10;                          &quot;-fx-border-color: transparent;&quot; +&#10;                          &quot;-fx-border-width: 0 0 1 0;&quot; + // Solo borde inferior&#10;                          &quot;-fx-border-style: solid;&quot; +&#10;                          &quot;-fx-border-radius: 0;&quot; +&#10;                          &quot;-fx-background-radius: 5;&quot;);&#10;        textField.setPadding(new Insets(12, 15, 12, 15));&#10;        return textField;&#10;    }&#10;&#10;    private Button crearBoton(String texto, String colorFondo) {&#10;        Button boton = new Button(texto);&#10;        boton.setStyle(&quot;-fx-background-color: &quot; + colorFondo + &quot;;&quot; +&#10;                       &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                       &quot;-fx-font-family: 'Montserrat';&quot; +&#10;                       &quot;-fx-font-weight: bold;&quot; +&#10;                       &quot;-fx-border-color: transparent;&quot; +&#10;                       &quot;-fx-border-radius: 8;&quot; +&#10;                       &quot;-fx-background-radius: 8;&quot;);&#10;        boton.setPadding(new Insets(12, 15, 12, 15));&#10;        boton.setMaxWidth(Double.MAX_VALUE);&#10;&#10;        // Efectos al pasar el ratón&#10;        boton.setOnMouseEntered(e -&gt; {&#10;            boton.setStyle(&quot;-fx-background-color: derive(&quot; + colorFondo + &quot;, -10%);&quot; +&#10;                           &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                           &quot;-fx-font-family: 'Montserrat';&quot; +&#10;                           &quot;-fx-font-weight: bold;&quot; +&#10;                           &quot;-fx-border-color: transparent;&quot; +&#10;                           &quot;-fx-border-radius: 8;&quot; +&#10;                           &quot;-fx-background-radius: 8;&quot; +&#10;                           &quot;-fx-cursor: hand;&quot;);&#10;            boton.setEffect(new DropShadow(5, Color.rgb(0, 0, 0, 0.2)));&#10;        });&#10;&#10;        boton.setOnMouseExited(e -&gt; {&#10;            boton.setStyle(&quot;-fx-background-color: &quot; + colorFondo + &quot;;&quot; +&#10;                           &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                           &quot;-fx-font-family: 'Montserrat';&quot; +&#10;                           &quot;-fx-font-weight: bold;&quot; +&#10;                           &quot;-fx-border-color: transparent;&quot; +&#10;                           &quot;-fx-border-radius: 8;&quot; +&#10;                           &quot;-fx-background-radius: 8;&quot;);&#10;            boton.setEffect(null);&#10;        });&#10;&#10;        return boton;&#10;    }&#10;&#10;    private void mostrarAlerta(String titulo, String mensaje) {&#10;        Alert alerta = new Alert(Alert.AlertType.INFORMATION);&#10;        alerta.setTitle(titulo);&#10;        alerta.setHeaderText(null);&#10;        alerta.setContentText(mensaje);&#10;&#10;        // Estilo personalizado para el diálogo&#10;        DialogPane dialogPane = alerta.getDialogPane();&#10;        dialogPane.setMinHeight(200);&#10;        dialogPane.setMinWidth(400);&#10;        dialogPane.setPrefSize(450, 250);&#10;&#10;        // Ajustar el contenedor de texto para que se ajuste correctamente&#10;        Label label = new Label(mensaje);&#10;        label.setWrapText(true);&#10;        label.setMaxWidth(400);&#10;        label.setTextAlignment(javafx.scene.text.TextAlignment.LEFT);&#10;        label.setStyle(&quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                      &quot;-fx-font-size: 14px;&quot; +&#10;                      &quot;-fx-font-family: 'Montserrat';&quot;);&#10;&#10;        // Reemplazar el contenido del diálogo con nuestro label personalizado&#10;        dialogPane.setContent(label);&#10;&#10;        dialogPane.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                           &quot;-fx-border-color: &quot; + COLOR_BEIGE + &quot;;&quot; +&#10;                           &quot;-fx-border-width: 2px;&quot; +&#10;                           &quot;-fx-border-radius: 10px;&quot; +&#10;                           &quot;-fx-background-radius: 10px;&quot;);&#10;&#10;        // Cambiar estilo de los botones&#10;        dialogPane.getButtonTypes().forEach(buttonType -&gt; {&#10;            Button button = (Button) dialogPane.lookupButton(buttonType);&#10;            button.setStyle(&quot;-fx-background-color: &quot; + COLOR_MINT + &quot;;&quot; +&#10;                           &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                           &quot;-fx-font-family: 'Montserrat';&quot; +&#10;                           &quot;-fx-font-weight: bold;&quot; +&#10;                           &quot;-fx-padding: 10 20 10 20;&quot; +&#10;                           &quot;-fx-border-radius: 8;&quot; +&#10;                           &quot;-fx-background-radius: 8;&quot;);&#10;        });&#10;&#10;        // Configurar para que la ventana sea redimensionable&#10;        Stage stage = (Stage) dialogPane.getScene().getWindow();&#10;        stage.setResizable(true);&#10;&#10;}&#10;                return;&#10;    }&#10;}&#10;&#10;&#10;" />
              <option name="updatedContent" value="package view;&#10;&#10;import controller.AgendaController;&#10;import javafx.geometry.Insets;&#10;import javafx.geometry.Orientation;&#10;import javafx.geometry.Pos;&#10;import javafx.scene.Node;&#10;import javafx.scene.Scene;&#10;import javafx.scene.control.*;&#10;import javafx.scene.layout.*;&#10;import javafx.scene.text.TextAlignment;&#10;import javafx.stage.Modality;&#10;import javafx.stage.Stage;&#10;import javafx.scene.paint.Color;&#10;import javafx.scene.text.Font;&#10;import javafx.scene.text.FontWeight;&#10;import javafx.scene.effect.DropShadow;&#10;&#10;import java.util.List;&#10;&#10;public class AgendaView {&#10;    private final AgendaController controller;&#10;&#10;    // Definición de colores según la paleta proporcionada&#10;    private static final String COLOR_BEIGE = &quot;#F2D0A7&quot;;       // Beige&#10;    private static final String COLOR_CREMA = &quot;#F2EDE9&quot;;       // Crema claro&#10;    private static final String COLOR_MINT = &quot;#C3D7D8&quot;;        // Azul claro&#10;    private static final String COLOR_MARRON = &quot;#8C6E5D&quot;;      // Marrón&#10;    private static final String COLOR_ROSA = &quot;#F2CFC2&quot;;        // Rosa pastel&#10;    private static final String COLOR_TEXTO = &quot;#3A3A3A&quot;;       // Texto oscuro&#10;&#10;    public AgendaView(AgendaController controller) {&#10;        this.controller = controller;&#10;    }&#10;&#10;    public void mostrar(Stage primaryStage) {&#10;        primaryStage.setTitle(&quot;Agenda de Contactos&quot;);&#10;&#10;        // Título principal con estilo moderno&#10;        Label lblTitulo = new Label(&quot;AGENDA DE CONTACTOS&quot;);&#10;        lblTitulo.setFont(Font.font(&quot;Arial&quot;, FontWeight.BOLD, 22));&#10;        lblTitulo.setTextFill(Color.web(COLOR_MARRON));&#10;        lblTitulo.setPadding(new Insets(15, 0, 15, 0));&#10;        lblTitulo.setAlignment(Pos.CENTER);&#10;        lblTitulo.setMaxWidth(Double.MAX_VALUE);&#10;        lblTitulo.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                          &quot;-fx-background-radius: 8;&quot; +&#10;                          &quot;-fx-border-radius: 8;&quot;);&#10;&#10;        // Campos de entrada con estilo moderno&#10;        Label lblDatosContacto = new Label(&quot;INFORMACIÓN DE CONTACTO&quot;);&#10;        lblDatosContacto.setFont(Font.font(&quot;Arial&quot;, FontWeight.BOLD, 14));&#10;        lblDatosContacto.setTextFill(Color.web(COLOR_MARRON));&#10;        lblDatosContacto.setPadding(new Insets(10, 0, 10, 0));&#10;        lblDatosContacto.setAlignment(Pos.CENTER);&#10;        lblDatosContacto.setMaxWidth(Double.MAX_VALUE);&#10;&#10;        TextField txtNombre = crearCampoTexto(&quot;Nombre&quot;);&#10;        TextField txtApellido = crearCampoTexto(&quot;Apellido&quot;);&#10;        TextField txtTelefono = crearCampoTexto(&quot;Teléfono (9 dígitos)&quot;);&#10;        TextField txtEmail = crearCampoTexto(&quot;Correo electrónico&quot;);&#10;&#10;        // Lista de contactos con estilo moderno&#10;        ListView&lt;String&gt; listaContactos = new ListView&lt;&gt;();&#10;        listaContactos.setStyle(&quot;-fx-control-inner-background: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                               &quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                               &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                               &quot;-fx-border-color: &quot; + COLOR_MINT + &quot;;&quot; +&#10;                               &quot;-fx-border-width: 2px;&quot; +&#10;                               &quot;-fx-border-radius: 10px;&quot; +&#10;                               &quot;-fx-background-radius: 10px;&quot; +&#10;                               &quot;-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 10, 0, 0, 5);&quot;);&#10;&#10;        // Botones con estilos modernos&#10;        Button btnAgregar = crearBoton(&quot;Añadir Contacto&quot;, COLOR_MINT);&#10;        Button btnListar = crearBoton(&quot;Listar Contactos&quot;, COLOR_MINT);&#10;        Button btnEliminar = crearBoton(&quot;Eliminar Contacto&quot;, COLOR_MARRON);&#10;        Button btnModificar = crearBoton(&quot;Modificar Teléfono&quot;, COLOR_MINT);&#10;        Button btnEspacios = crearBoton(&quot;Espacios Libres&quot;, COLOR_ROSA);&#10;        Button btnLlena = crearBoton(&quot;¿Agenda Llena?&quot;, COLOR_ROSA);&#10;&#10;        // Acciones&#10;        btnAgregar.setOnAction(e -&gt; {&#10;            try {&#10;                String mensaje = controller.agregarContacto(&#10;                        txtNombre.getText(),&#10;                        txtApellido.getText(),&#10;                        txtTelefono.getText(),&#10;                        txtEmail.getText()&#10;                );&#10;                mostrarAlerta(&quot;Resultado&quot;, mensaje);&#10;            } catch (Exception ex) {&#10;                mostrarAlerta(&quot;Error&quot;, ex.getMessage());&#10;            }&#10;        });&#10;&#10;        btnListar.setOnAction(e -&gt; {&#10;            listaContactos.getItems().setAll(controller.listarContactos());&#10;        });&#10;&#10;        btnEliminar.setOnAction(e -&gt; {&#10;            String mensaje = controller.eliminarContacto(txtNombre.getText(), txtApellido.getText());&#10;            mostrarAlerta(&quot;Resultado&quot;, mensaje);&#10;        });&#10;&#10;        // Modificado: Botón de modificar teléfono ahora muestra un diálogo personalizado&#10;        btnModificar.setOnAction(e -&gt; {&#10;            String nombre = txtNombre.getText();&#10;            String apellido = txtApellido.getText();&#10;&#10;            // Primero verificamos si el contacto existe&#10;            if (nombre.isEmpty() || apellido.isEmpty()) {&#10;                mostrarAlerta(&quot;Error&quot;, &quot;Debe ingresar nombre y apellido para buscar el contacto.&quot;);&#10;                return;&#10;            }&#10;&#10;            // Intentamos buscar el teléfono actual del contacto&#10;            List&lt;String&gt; contactos = controller.listarContactos();&#10;            String telefonoActual = &quot;&quot;;&#10;            boolean encontrado = false;&#10;&#10;            for (String contactoInfo : contactos) {&#10;                // Buscar exactamente el nombre y apellido&#10;                if (contactoInfo.toLowerCase().startsWith(nombre.toLowerCase() + &quot; &quot; + apellido.toLowerCase() + &quot;: &quot;)) {&#10;                    // Extraer el teléfono del formato &quot;Nombre Apellido: Teléfono - Email&quot;&#10;                    int inicioTel = contactoInfo.indexOf(&quot;: &quot;) + 2;&#10;                    int finTel = contactoInfo.indexOf(&quot; - &quot;);&#10;                    if (inicioTel &gt; 0 &amp;&amp; finTel &gt; inicioTel) {&#10;                        telefonoActual = contactoInfo.substring(inicioTel, finTel);&#10;                        encontrado = true;&#10;                        break;&#10;                    }&#10;                }&#10;            }&#10;&#10;            if (!encontrado) {&#10;                mostrarAlerta(&quot;Error&quot;, &quot;No se encontró el contacto especificado.&quot;);&#10;                return;&#10;            }&#10;&#10;            // Mostrar diálogo de modificación&#10;            mostrarDialogoModificarTelefono(nombre, apellido, telefonoActual);&#10;        });&#10;&#10;        btnEspacios.setOnAction(e -&gt; {&#10;            mostrarAlerta(&quot;Espacios libres&quot;, &quot;Quedan &quot; + controller.espaciosLibres() + &quot; espacios.&quot;);&#10;        });&#10;&#10;        btnLlena.setOnAction(e -&gt; {&#10;            boolean llena = controller.agendaLlena();&#10;            mostrarAlerta(&quot;Estado de Agenda&quot;, llena ? &quot;La agenda está llena&quot; : &quot;Aún hay espacio disponible&quot;);&#10;        });&#10;&#10;        // Layout mejorado con diseño moderno&#10;        VBox seccionFormulario = new VBox(10);&#10;        seccionFormulario.getChildren().addAll(lblDatosContacto, txtNombre, txtApellido, txtTelefono, txtEmail);&#10;        seccionFormulario.setStyle(&quot;-fx-background-color: &quot; + COLOR_BEIGE + &quot;;&quot; +&#10;                                  &quot;-fx-background-radius: 12;&quot; +&#10;                                  &quot;-fx-padding: 20;&quot; +&#10;                                  &quot;-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 10, 0, 0, 5);&quot;);&#10;&#10;        // Botones en disposición vertical&#10;        VBox seccionBotones = new VBox(10);&#10;        seccionBotones.getChildren().addAll(&#10;                new Label(&quot;ACCIONES&quot;),&#10;                btnAgregar,&#10;                btnListar,&#10;                btnModificar,&#10;                new Separator(),&#10;                btnEliminar,&#10;                new Separator(),&#10;                btnEspacios,&#10;                btnLlena);&#10;        seccionBotones.setStyle(&quot;-fx-padding: 15;&quot; +&#10;                               &quot;-fx-background-color: &quot; + COLOR_BEIGE + &quot;;&quot; +&#10;                               &quot;-fx-background-radius: 12;&quot; +&#10;                               &quot;-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 10, 0, 0, 5);&quot;);&#10;&#10;        // Agregamos estilo al título de la sección de botones&#10;        ((Label)seccionBotones.getChildren().get(0)).setFont(Font.font(&quot;Arial&quot;, FontWeight.BOLD, 14));&#10;        ((Label)seccionBotones.getChildren().get(0)).setTextFill(Color.web(COLOR_MARRON));&#10;        ((Label)seccionBotones.getChildren().get(0)).setAlignment(Pos.CENTER);&#10;        ((Label)seccionBotones.getChildren().get(0)).setMaxWidth(Double.MAX_VALUE);&#10;        ((Label)seccionBotones.getChildren().get(0)).setPadding(new Insets(0, 0, 5, 0));&#10;&#10;        VBox panelIzquierdo = new VBox(20);&#10;        panelIzquierdo.getChildren().addAll(lblTitulo, seccionFormulario, seccionBotones);&#10;        panelIzquierdo.setPadding(new Insets(25));&#10;        panelIzquierdo.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot;);&#10;        panelIzquierdo.setPrefWidth(300);&#10;        panelIzquierdo.setAlignment(Pos.TOP_CENTER);&#10;&#10;        Label lblListaContactos = new Label(&quot;CONTACTOS GUARDADOS&quot;);&#10;        lblListaContactos.setFont(Font.font(&quot;Arial&quot;, FontWeight.BOLD, 18));&#10;        lblListaContactos.setTextFill(Color.web(COLOR_MARRON));&#10;        lblListaContactos.setPadding(new Insets(0, 0, 15, 0));&#10;        lblListaContactos.setAlignment(Pos.CENTER);&#10;        lblListaContactos.setMaxWidth(Double.MAX_VALUE);&#10;&#10;        VBox panelDerecho = new VBox(15);&#10;        panelDerecho.getChildren().addAll(lblListaContactos, listaContactos);&#10;        panelDerecho.setPadding(new Insets(25));&#10;        panelDerecho.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot;);&#10;&#10;        // Añadir una línea decorativa entre paneles&#10;        Separator separador = new Separator();&#10;        separador.setOrientation(Orientation.VERTICAL);&#10;        separador.setStyle(&quot;-fx-background-color: &quot; + COLOR_BEIGE + &quot;;&quot;);&#10;&#10;        HBox contenedorPrincipal = new HBox();&#10;        contenedorPrincipal.getChildren().addAll(panelIzquierdo, separador, panelDerecho);&#10;        HBox.setHgrow(panelDerecho, Priority.ALWAYS);&#10;&#10;        BorderPane root = new BorderPane();&#10;        root.setCenter(contenedorPrincipal);&#10;        root.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot;);&#10;&#10;        Scene scene = new Scene(root, 850, 600);&#10;        primaryStage.setScene(scene);&#10;        primaryStage.show();&#10;    }&#10;&#10;    private TextField crearCampoTexto(String prompt) {&#10;        TextField textField = new TextField();&#10;        textField.setPromptText(prompt);&#10;        textField.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                          &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                          &quot;-fx-prompt-text-fill: derive(&quot; + COLOR_TEXTO + &quot;, 50%);&quot; +&#10;                          &quot;-fx-border-color: transparent;&quot; +&#10;                          &quot;-fx-border-width: 0 0 2 0;&quot; +&#10;                          &quot;-fx-border-style: solid;&quot; +&#10;                          &quot;-fx-border-color: &quot; + COLOR_MINT + &quot;;&quot; +&#10;                          &quot;-fx-background-radius: 5;&quot;);&#10;        textField.setPadding(new Insets(12, 15, 12, 15));&#10;        return textField;&#10;    }&#10;&#10;    private Button crearBoton(String texto, String colorFondo) {&#10;        Button boton = new Button(texto);&#10;        boton.setStyle(&quot;-fx-background-color: &quot; + colorFondo + &quot;;&quot; +&#10;                       &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                       &quot;-fx-font-family: 'Arial';&quot; +&#10;                       &quot;-fx-font-weight: bold;&quot; +&#10;                       &quot;-fx-border-color: transparent;&quot; +&#10;                       &quot;-fx-border-radius: 8;&quot; +&#10;                       &quot;-fx-background-radius: 8;&quot;);&#10;        boton.setPadding(new Insets(12, 15, 12, 15));&#10;        boton.setMaxWidth(Double.MAX_VALUE);&#10;        &#10;        // Efectos al pasar el ratón&#10;        boton.setOnMouseEntered(e -&gt; {&#10;            boton.setStyle(&quot;-fx-background-color: derive(&quot; + colorFondo + &quot;, -10%);&quot; +&#10;                           &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                           &quot;-fx-font-family: 'Arial';&quot; +&#10;                           &quot;-fx-font-weight: bold;&quot; +&#10;                           &quot;-fx-border-color: transparent;&quot; +&#10;                           &quot;-fx-border-radius: 8;&quot; +&#10;                           &quot;-fx-background-radius: 8;&quot; +&#10;                           &quot;-fx-cursor: hand;&quot;);&#10;            boton.setEffect(new DropShadow(5, Color.rgb(0, 0, 0, 0.2)));&#10;        });&#10;        &#10;        boton.setOnMouseExited(e -&gt; {&#10;            boton.setStyle(&quot;-fx-background-color: &quot; + colorFondo + &quot;;&quot; +&#10;                           &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                           &quot;-fx-font-family: 'Arial';&quot; +&#10;                           &quot;-fx-font-weight: bold;&quot; +&#10;                           &quot;-fx-border-color: transparent;&quot; +&#10;                           &quot;-fx-border-radius: 8;&quot; +&#10;                           &quot;-fx-background-radius: 8;&quot;);&#10;            boton.setEffect(null);&#10;        });&#10;        &#10;        return boton;&#10;    }&#10;&#10;    private void mostrarAlerta(String titulo, String mensaje) {&#10;        Alert alerta = new Alert(Alert.AlertType.INFORMATION);&#10;        alerta.setTitle(titulo);&#10;        alerta.setHeaderText(null);&#10;        alerta.setContentText(mensaje);&#10;        &#10;        // Estilo personalizado para el diálogo&#10;        DialogPane dialogPane = alerta.getDialogPane();&#10;        dialogPane.setMinHeight(200);&#10;        dialogPane.setMinWidth(400);&#10;        dialogPane.setPrefSize(450, 250);&#10;        &#10;        // Ajustar el contenedor de texto para que se ajuste correctamente&#10;        Label label = new Label(mensaje);&#10;        label.setWrapText(true);&#10;        label.setMaxWidth(400);&#10;        label.setTextAlignment(TextAlignment.LEFT);&#10;        label.setStyle(&quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                      &quot;-fx-font-size: 14px;&quot; +&#10;                      &quot;-fx-font-family: 'Arial';&quot;);&#10;        &#10;        // Reemplazar el contenido del diálogo con nuestro label personalizado&#10;        dialogPane.setContent(label);&#10;        &#10;        dialogPane.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                           &quot;-fx-border-color: &quot; + COLOR_BEIGE + &quot;;&quot; +&#10;                           &quot;-fx-border-width: 2px;&quot; +&#10;                           &quot;-fx-border-radius: 10px;&quot; +&#10;                           &quot;-fx-background-radius: 10px;&quot;);&#10;        &#10;        // Cambiar estilo de los botones&#10;        dialogPane.getButtonTypes().forEach(buttonType -&gt; {&#10;            Button button = (Button) dialogPane.lookupButton(buttonType);&#10;            button.setStyle(&quot;-fx-background-color: &quot; + COLOR_MINT + &quot;;&quot; +&#10;                           &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                           &quot;-fx-font-family: 'Arial';&quot; +&#10;                           &quot;-fx-font-weight: bold;&quot; +&#10;                           &quot;-fx-padding: 10 20 10 20;&quot; +&#10;                           &quot;-fx-border-radius: 8;&quot; +&#10;                           &quot;-fx-background-radius: 8;&quot;);&#10;        });&#10;        &#10;        // Configurar para que la ventana sea redimensionable&#10;        Stage stage = (Stage) dialogPane.getScene().getWindow();&#10;        stage.setResizable(true);&#10;        &#10;        alerta.showAndWait();&#10;    }&#10;&#10;    private void mostrarDialogoModificarTelefono(String nombre, String apellido, String telefonoActual) {&#10;        // Crear ventana de diálogo&#10;        Stage dialogStage = new Stage();&#10;        dialogStage.setTitle(&quot;Modificar Teléfono&quot;);&#10;&#10;        // Título del diálogo&#10;        Label lblTitulo = new Label(&quot;MODIFICAR TELÉFONO&quot;);&#10;        lblTitulo.setFont(Font.font(&quot;Arial&quot;, FontWeight.BOLD, 18));&#10;        lblTitulo.setTextFill(Color.web(COLOR_MARRON));&#10;        lblTitulo.setPadding(new Insets(0, 0, 20, 0));&#10;        lblTitulo.setAlignment(Pos.CENTER);&#10;        lblTitulo.setMaxWidth(Double.MAX_VALUE);&#10;&#10;        // Etiquetas con estilo&#10;        Label lblNombre = new Label(&quot;Nombre:&quot;);&#10;        Label lblApellido = new Label(&quot;Apellido:&quot;);&#10;        Label lblTelefonoActual = new Label(&quot;Teléfono Actual:&quot;);&#10;        Label lblNuevoTelefono = new Label(&quot;Nuevo Teléfono:&quot;);&#10;        &#10;        // Aplicar estilo a las etiquetas&#10;        lblNombre.setStyle(&quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;; -fx-font-weight: bold;&quot;);&#10;        lblApellido.setStyle(&quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;; -fx-font-weight: bold;&quot;);&#10;        lblTelefonoActual.setStyle(&quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;; -fx-font-weight: bold;&quot;);&#10;        lblNuevoTelefono.setStyle(&quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;; -fx-font-weight: bold;&quot;);&#10;&#10;        // Campos de texto con estilos coherentes&#10;        TextField txtNombre = new TextField(nombre);&#10;        txtNombre.setEditable(false);&#10;        txtNombre.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                           &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                           &quot;-fx-border-color: transparent;&quot; +&#10;                           &quot;-fx-border-width: 0 0 1 0;&quot; +&#10;                           &quot;-fx-border-style: solid;&quot; +&#10;                           &quot;-fx-background-radius: 5;&quot;);&#10;        &#10;        TextField txtApellido = new TextField(apellido);&#10;        txtApellido.setEditable(false);&#10;        txtApellido.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                           &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                           &quot;-fx-border-color: transparent;&quot; +&#10;                           &quot;-fx-border-width: 0 0 1 0;&quot; +&#10;                           &quot;-fx-border-style: solid;&quot; +&#10;                           &quot;-fx-background-radius: 5;&quot;);&#10;        &#10;        TextField txtTelefonoActual = new TextField(telefonoActual);&#10;        txtTelefonoActual.setEditable(false);&#10;        txtTelefonoActual.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                           &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                           &quot;-fx-border-color: transparent;&quot; +&#10;                           &quot;-fx-border-width: 0 0 1 0;&quot; +&#10;                           &quot;-fx-border-style: solid;&quot; +&#10;                           &quot;-fx-background-radius: 5;&quot;);&#10;        &#10;        TextField txtNuevoTelefono = new TextField();&#10;        txtNuevoTelefono.setPromptText(&quot;Ingrese el nuevo teléfono&quot;);&#10;        txtNuevoTelefono.setStyle(&quot;-fx-background-color: &quot; + COLOR_CREMA + &quot;;&quot; +&#10;                           &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                           &quot;-fx-prompt-text-fill: derive(&quot; + COLOR_TEXTO + &quot;, 50%);&quot; +&#10;                           &quot;-fx-border-color: &quot; + COLOR_MINT + &quot;;&quot; +&#10;                           &quot;-fx-border-width: 0 0 2 0;&quot; +&#10;                           &quot;-fx-border-style: solid;&quot; +&#10;                           &quot;-fx-background-radius: 5;&quot;);&#10;        txtNuevoTelefono.setPadding(new Insets(10));&#10;        txtNuevoTelefono.requestFocus(); // Poner el foco en este campo&#10;&#10;        // Botones con estilo coherente&#10;        Button btnGuardar = new Button(&quot;Guardar Cambios&quot;);&#10;        btnGuardar.setStyle(&quot;-fx-background-color: &quot; + COLOR_MINT + &quot;;&quot; +&#10;                       &quot;-fx-text-fill: &quot; + COLOR_TEXTO + &quot;;&quot; +&#10;                       &quot;-fx-font-family: 'Arial';&quot; +&#10;                       &quot;-fx-font-weight: bold;&quot; +&#10;                       &quot;-fx-border-color: transparent;&quot; +&#10;                       &quot;-fx-border-radius: 8;&quot; +&#10;                       &quot;-fx-background-radius: 8;&quot; +&#10;                       &quot;-fx-padding: 10 20 10 20;&quot;);&#10;        btnGuardar.setPrefWidth(150);&#10;        &#10;        Button btnCancelar = new Button(&quot;Cancelar&quot;);&#10;        btnCancelar.setStyle(&quot;-fx-background-color: &quot; + COLOR_MARRON + &quot;;&quot; +&#10;                       &quot;-fx-text-fill: white;&quot; +&#10;                       &quot;-fx-font-family: 'Arial';&quot; +&#10;                       &quot;-fx-font-weight: bold;&quot; +&#10;                       &quot;-fx-border-color: transparent;&quot; +&#10;                       &quot;-fx-border-radius: 8;&quot; +&#10;                       &quot;-fx-background-radius: 8;&quot; +&#10;                       &quot;-fx-padding: 10 20 10 20;&quot;);&#10;        btnCancelar.setPrefWidth(120);&#10;&#10;        // Acciones de los botones&#10;        btnGuardar.setOnAction(e -&gt; {&#10;            String nuevoTelefono = txtNuevoTelefono.getText();&#10;            if (nuevoTelefono.isEmpty()) {&#10;                mostrarAlerta(&quot;Error&quot;, &quot;El nuevo teléfono no puede estar vacío.&quot;);&#10;                return;&#10;            }&#10;&#10;            // Lógica para modificar el teléfono en el controlador&#10;            String mensaje = controller.modificarTelefono(nombre, apellido, nuevoTelefono);&#10;            mostrarAlerta(&quot;Resultado&quot;, mensaje);&#10;&#10;            dialogStage.close();&#10;        });&#10;&#10;        btnCancelar.setOnAction(e -&gt; dialogStage.close());&#10;&#10;        // Layout del diálogo mejorado&#10;        GridPane grid = new GridPane();&#10;        grid.setPadding(new Insets(20));&#10;        grid.setVgap(15);&#10;        grid.setHgap(15);&#10;        grid.add(lblTitulo, 0, 0, 2, 1); // Ocupa dos columnas&#10;        grid.add(lblNombre, 0, 1);&#10;        grid.add(txtNombre, 1, 1);&#10;        grid.add(lblApellido, 0, 2);&#10;        grid.add(txtApellido, 1, 2);&#10;        grid.add(lblTelefonoActual, 0, 3);&#10;        grid.add(txtTelefonoActual, 1, 3);&#10;        grid.add(lblNuevoTelefono, 0, 4);&#10;        grid.add(txtNuevoTelefono, 1, 4);&#10;        &#10;        // Añadir separador antes de los botones&#10;        Separator separador = new Separator();&#10;        separador.setPadding(new Insets(15, 0, 15, 0));&#10;        grid.add(separador, 0, 5, 2, 1);&#10;        &#10;        // Añadir botones en un HBox para mejor distribución&#10;        HBox botonesBox = new HBox(20);&#10;        botonesBox.setAlignment(Pos.CENTER);&#10;        botonesBox.getChildren().addAll(btnGuardar, btnCancelar);&#10;        grid.add(botonesBox, 0, 6, 2, 1);&#10;        &#10;        // Estilo del contenedor principal&#10;        grid.setAlignment(Pos.CENTER);&#10;        grid.setStyle(&quot;-fx-background-color: &quot; + COLOR_BEIGE + &quot;;&quot; +&#10;                     &quot;-fx-background-radius: 10;&quot;);&#10;&#10;        // Configurar escena y mostrar&#10;        Scene scene = new Scene(grid, 450, 400);&#10;        dialogStage.setScene(scene);&#10;        dialogStage.initModality(Modality.APPLICATION_MODAL); // Modal&#10;        dialogStage.setResizable(false);&#10;        dialogStage.show();&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>